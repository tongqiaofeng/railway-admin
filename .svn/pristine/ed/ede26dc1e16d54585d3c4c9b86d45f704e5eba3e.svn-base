{"remainingRequest":"D:\\aa-tong\\my-projects\\railway-admin\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\aa-tong\\my-projects\\railway-admin\\src\\components\\Stock-management.vue?vue&type=template&id=10393d2b&scoped=true&","dependencies":[{"path":"D:\\aa-tong\\my-projects\\railway-admin\\src\\components\\Stock-management.vue","mtime":1615368046711},{"path":"D:\\aa-tong\\my-projects\\railway-admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\aa-tong\\my-projects\\railway-admin\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"D:\\aa-tong\\my-projects\\railway-admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\aa-tong\\my-projects\\railway-admin\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}