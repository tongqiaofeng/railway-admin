{"remainingRequest":"D:\\aa-tong\\my-projects\\railway-admin\\node_modules\\babel-loader\\lib\\index.js!D:\\aa-tong\\my-projects\\railway-admin\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\aa-tong\\my-projects\\railway-admin\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\aa-tong\\my-projects\\railway-admin\\src\\components\\Word-admin.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\aa-tong\\my-projects\\railway-admin\\src\\components\\Word-admin.vue","mtime":1615553606946},{"path":"D:\\aa-tong\\my-projects\\railway-admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\aa-tong\\my-projects\\railway-admin\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"D:\\aa-tong\\my-projects\\railway-admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\aa-tong\\my-projects\\railway-admin\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["Word-admin.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <div class=\"word-admin-container\">\r\n    <!-- <h1>文档管理</h1> -->\r\n    <div style=\"height: 40px;line-height: 40px;text-align: left;\">\r\n      <span style=\"display: inline-block;width: 80px;color: #606266;font-size: 14px;\">上传时间：</span>\r\n      <el-date-picker v-model=\"time\" type=\"date\" placeholder=\"请选择\" format=\"yyyy-MM-dd\" value-format=\"yyyy-MM-dd\"\r\n        clearable>\r\n      </el-date-picker>\r\n      <el-input style=\"width: 330px;margin-left: 10px;\" v-model=\"keyword\" placeholder=\"可输入文档名称进行搜索\">\r\n      </el-input>\r\n      <el-button style=\"margin-left: 10px;\" type=\"primary\" @click=\"wordCheck\">查 询</el-button>\r\n      <el-button type=\"primary\" @click=\"addWord\">+ 新 建</el-button>\r\n      <el-dialog title=\"添加文档\" :visible.sync=\"dialogAddWordVisible\" :close-on-press-escape=\"false\"\r\n        :close-on-click-modal=\"false\" :modal-append-to-body=\"false\" :append-to-body=\"false\">\r\n        <el-form :model=\"wordForm\" :rules=\"wordRules\">\r\n          <el-form-item label=\"文档名称：\" required>\r\n            <div style=\"display: flex;\">\r\n              <el-input v-model=\"wordForm.name\" placeholder=\"请输入\" style=\"width: 100%;\"></el-input>\r\n            </div>\r\n          </el-form-item>\r\n          <el-form-item label=\"文档文件：\" required>\r\n            <div style=\"display:flex;\">\r\n              <div class=\"upload-imgs\">\r\n                <div class=\"add\">\r\n                  <form enctype=\"multipart/form-data\" style=\"width: 100px;\">\r\n                    <input @change=\"inputChange($event)\" type=\"file\" name=\"img\"\r\n                      accept=\"image/*,.pptx,.xlsx,.pdf,.doc,.docx,.xml,application/msword,application/vnd.openxmlformats-officedocument.wordprocessingml.document\"\r\n                      class=\"inputUpload\" multiple />\r\n                    <i class=\"el-icon-plus addIcon\"></i>\r\n                  </form>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </el-form-item>\r\n        </el-form>\r\n        <div slot=\"footer\">\r\n          <el-button @click=\"dialogAddWordVisible = false\">取 消</el-button>\r\n          <el-button type=\"primary\" @click=\"addWordSure\" v-preventClick>确 定</el-button>\r\n        </div>\r\n      </el-dialog>\r\n    </div>\r\n    <div style=\"margin-top: 20px;\">\r\n      <el-table :data=\"wordList\" style=\"width: 980px\" border>\r\n        <el-table-column prop=\"name\" label=\"文件名称\">\r\n        </el-table-column>\r\n        <el-table-column prop=\"time\" label=\"上传时间\">\r\n        </el-table-column>\r\n        <el-table-column label=\"操作\">\r\n          <template slot-scope=\"scope\">\r\n            <div>\r\n              <el-button type=\"text\" @click=\"qrcodeLook(scope.row)\">二维码预览</el-button>\r\n              <el-dialog title=\"二维码预览\" :visible.sync=\"dialogQrcodeLookVisible\" :close-on-press-escape=\"false\"\r\n                :close-on-click-modal=\"false\" :modal-append-to-body=\"false\" :append-to-body=\"false\">\r\n                <div>\r\n                  <div style=\"width: 200px;height: 200px;margin: 0 auto;\" class=\"qr_img\" id=\"qrcode\" ref=\"qrcode\"></div>\r\n                  <p @click=\"downs\">下载</p>\r\n                </div>\r\n                <div slot=\"footer\">\r\n                  <el-button @click=\"dialogQrcodeLookVisible = false\">取 消</el-button>\r\n                  <el-button type=\"primary\" @click=\"dialogQrcodeLookVisible = false\">确 定</el-button>\r\n                </div>\r\n              </el-dialog>\r\n              <!-- <el-button type=\"text\" @click=\"createPicture(scope.row)\">\r\n                <div class=\"qr_img\" id=\"qrcode2\" ref=\"qrcode2\"> </div>二维码下载\r\n              </el-button> -->\r\n              <el-button type=\"text\">详情</el-button>\r\n              <el-button type=\"text\" style=\"color: red;\">删除</el-button>\r\n            </div>\r\n          </template>\r\n        </el-table-column>\r\n      </el-table>\r\n      <div style=\"width: 980px;height: 50px;position: relative;\">\r\n        <div style=\"margin:15px 0;position:absolute;right:0;\">\r\n          <el-pagination @current-change=\"handleCurrentChange\" :current-page=\"page\"\r\n            layout=\"total, prev, pager, next, jumper\" :total=\"total\">\r\n          </el-pagination>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n  import QRCode from \"qrcodejs2\";\r\n  import html2canvas from \"html2canvas\";\r\n  export default {\r\n    data() {\r\n      return {\r\n        img: this.$store.state.baseUrl,\r\n        time: '',\r\n        keyword: '',\r\n        dialogAddWordVisible: false,\r\n        wordForm: {\r\n          name: ''\r\n        },\r\n        wordRules: {\r\n          name: [{\r\n            required: true,\r\n            message: '请输入文档名称',\r\n            trigger: 'blur'\r\n          }]\r\n        },\r\n        imgurls: [],\r\n\r\n        page: 1,\r\n        pageNum: 10,\r\n        total: 0,\r\n        wordList: [],\r\n        wordTypeList: ['image/jpeg', 'image/png', 'image/jpg', 'image/tif', 'image/bmp', 'image/gif', 'pptx', 'xlsx',\r\n          'pdf', 'doc', 'docx', 'xml', 'application/msword',\r\n          'application/vnd.openxmlformats-officedocument.wordprocessingml.document'\r\n        ],\r\n        dialogQrcodeLookVisible: false,\r\n        qrcode: '',\r\n        urlValue: \"\", // 生成二维码的内容\r\n        canvasImageUrl: \"\", //base64图片 用作下载\r\n\r\n      }\r\n    },\r\n    created() {\r\n      this.wordCheck();\r\n    },\r\n    methods: {\r\n      // 二维码预览\r\n      qrcodeLook(row) {\r\n        console.log(row);\r\n        this.urlValue = this.img + '/file/' + row.url;\r\n        this.dialogQrcodeLookVisible = true;\r\n        this.$nextTick(() => {\r\n          this.createQr();\r\n        });\r\n      },\r\n      // 生成二维码\r\n      createQr() {\r\n        let _this = this;\r\n        //生成前先清空二维码\r\n        document.getElementById(\"qrcode\").innerHTML = \"\";\r\n        this.qrcode = new QRCode(_this.$refs.qrcode, {\r\n          width: 200, // 宽\r\n          height: 200, //高\r\n          text: _this.urlValue, //生成二维码的内容\r\n          render: \"canvas\", //设置渲染方式（canvas,table 默认canvas）\r\n          correctLevel: QRCode.CorrectLevel.L //二维码纠错级别（L,M,Q,H）\r\n        });\r\n      },\r\n      downs() {\r\n        // //找到canvas标签\r\n        this.$nextTick(() => {\r\n          let myCanvas = this.$refs.qrcode;\r\n          console.log(myCanvas);\r\n        })\r\n\r\n        // let img = document.getElementById('qrcode').getElementsByTagName('img')\r\n        // console.log(img);\r\n        // // // //创建一个a标签节点\r\n        // let a = document.createElement(\"a\")\r\n        // // //设置a标签的href属性（将canvas变成png图片）\r\n        // let imgURL = myCanvas[0].toDataURL('image/jpg');\r\n        // let ua = navigator.userAgent;\r\n        // if (ua.indexOf(\"Trident\") != -1 && ua.indexOf(\"Windows\") != -1) { // IE内核 并且  windows系统 情况下 才执行;\r\n        //   var bstr = atob(imgURL.split(',')[1])\r\n        //   var n = bstr.length\r\n        //   var u8arr = new Uint8Array(n)\r\n        //   while (n--) {\r\n        //     u8arr[n] = bstr.charCodeAt(n)\r\n        //   }\r\n        //   var blob = new Blob([u8arr])\r\n        //   window.navigator.msSaveOrOpenBlob(blob, '下载' + '.' + 'png')\r\n        // } else if (ua.indexOf(\"Firefox\") > -1) { //火狐兼容下载\r\n        //   let blob = this.base64ToBlob(imgURL); //new Blob([content]);\r\n        //   let evt = document.createEvent(\"HTMLEvents\");\r\n        //   evt.initEvent(\"click\", true, true); //initEvent 不加后两个参数在FF下会报错  事件类型，是否冒泡，是否阻止浏览器的默认行为\r\n        //   a.download = ' '; //下载图片名称，如果填内容识别不到，下载为未知文件，所以我这里就不填为空\r\n        //   a.href = URL.createObjectURL(blob);\r\n        //   a.dispatchEvent(new MouseEvent('click', {\r\n        //     bubbles: true,\r\n        //     cancelable: true,\r\n        //     view: window\r\n        //   })); //兼容火狐\r\n        // } else { //谷歌兼容下载\r\n        //   img.src = myCanvas[0].toDataURL('image/jpg');\r\n        //   // a.href = myCanvas[0].toDataURL('image/png').replace('image/png', 'image/octet-stream')\r\n        //   a.href = img.src\r\n        //   //设置下载文件的名字\r\n        //   a.download = \"下载\"\r\n        //   //点击\r\n        //   a.click()\r\n        // }\r\n      },\r\n      //base64转blob\r\n      base64ToBlob(code) {\r\n        let parts = code.split(';base64,');\r\n        let contentType = parts[0].split(':')[1];\r\n        let raw = window.atob(parts[1]);\r\n        let rawLength = raw.length;\r\n        let uInt8Array = new Uint8Array(rawLength);\r\n        for (let i = 0; i < rawLength; ++i) {\r\n          uInt8Array[i] = raw.charCodeAt(i);\r\n        }\r\n        return new Blob([uInt8Array], {\r\n          type: contentType\r\n        });\r\n      },\r\n      // 生成图片并下载\r\n      createPicture() {\r\n        // console.log(row);\r\n        // this.urlValue = this.img + '/file/' + row.url;\r\n        // let _this = this;\r\n        // //生成前先清空二维码\r\n        // document.getElementById(\"qrcode2\").innerHTML = \"\";\r\n        // this.qrcode = new QRCode(_this.$refs.qrcode2, {\r\n        //   width: 200, // 宽\r\n        //   height: 200, //高\r\n        //   text: _this.urlValue, //生成二维码的内容\r\n        //   render: \"canvas\", //设置渲染方式（canvas,table 默认canvas）\r\n        //   correctLevel: QRCode.CorrectLevel.L //二维码纠错级别（L,M,Q,H）\r\n        // });\r\n        html2canvas(document.querySelector(\"#qrcode\"))\r\n          .then(canvas => {\r\n            let imgData = canvas.toDataURL(\"image/png\"); // 获得图片base64\r\n            this.canvasImageUrl = imgData;\r\n            console.log(this.canvasImageUrl);\r\n            if (window.navigator.msSaveOrOpenBlob) { //IE浏览器：创建blob对象\r\n              let bstr = atob(this.canvasImageUrls.split(\",\")[1]);\r\n              let n = bstr.length;\r\n              let u8arr = new Uint8Array(n);\r\n              while (n--) {\r\n                u8arr[n] = bstr.charCodeAt(n);\r\n              }\r\n              let blob = new Blob(u8arr);\r\n              window.navigator.msSaveOrOpenBlob(blob, \"文档\" + \".\" + \"png\");\r\n            } else { // 非ie浏览器\r\n              let a = document.createElement(\"a\");\r\n              a.href = this.canvasImageUrl;\r\n              a.setAttribute(\"download\", \"文档\");\r\n              a.click();\r\n            }\r\n          })\r\n          .catch(err => {\r\n            console.log(err);\r\n          });\r\n      },\r\n      // 新建文档\r\n      addWord() {\r\n        this.wordForm.name = '';\r\n        this.imgurls = [];\r\n        this.dialogAddWordVisible = true;\r\n      },\r\n      // 确定\r\n      addWordSure() {\r\n        this.$axios.post(this.$store.state.baseUrl + '/ruleSave', {\r\n          name: this.wordForm.name,\r\n          url: this.imgurls.join('|')\r\n        }).then(res => {\r\n          console.log('上传文档');\r\n          console.log(res);\r\n          this.$message.success({\r\n            message: \"文档上传成功\",\r\n            showClose: true,\r\n            duration: 2000,\r\n          });\r\n          this.dialogAddWordVisible = false;\r\n          this.time = '';\r\n          this.keyword = '';\r\n          this.handleCurrentChange(1);\r\n        }).catch(err => {\r\n          console.log(err);\r\n          this.$message.success({\r\n            message: err.data.message,\r\n            showClose: true,\r\n            duration: 2000,\r\n          });\r\n          this.dialogAddWordVisible = false;\r\n        })\r\n      },\r\n      // 上传文件\r\n      inputChange(e) {\r\n        let file = e.target.files[0];\r\n        console.log(file);\r\n        if (this.wordTypeList.indexOf(file.type) == -1) {\r\n          this.$message.error({\r\n            message: '文件类型错误，仅可上传图片、word、Excel、PPT、PDF等格式文件',\r\n            showClose: true,\r\n            duration: 2000\r\n          })\r\n        } else {\r\n          if (file.type.indexOf('image') == -1 && this.imgurls.length == 1) {\r\n            this.$message.warning({\r\n              message: '文件类型唯一，不可混合上传',\r\n              showClose: true,\r\n              duration: 2000\r\n            })\r\n          } else {\r\n            this.uploadLice(file);\r\n          }\r\n        }\r\n      },\r\n      //  返回file文件，调用接口执行上传\r\n      uploadLice(file) {\r\n        console.log(file);\r\n        let formdata = new FormData(); //创建form对象\r\n        formdata.append(\"file\", file); //通过append向form对象添加数据\r\n        this.uploadImg(formdata);\r\n      },\r\n      uploadImg(formdata) {\r\n        this.$axios\r\n          .post(this.$store.state.baseUrl + \"/upload\", formdata)\r\n          .then((res) => {\r\n            if (res.status == 200) {\r\n              this.$message.success({\r\n                message: \"文件上传成功\",\r\n                showClose: true,\r\n                duration: 2000,\r\n              });\r\n            }\r\n            console.log(res);\r\n            let imgurl = res.data.fileName;\r\n            if (this.imgurls.indexOf(imgurl) == -1) {\r\n              this.imgurls.push(imgurl);\r\n            };\r\n            console.log(this.imgurls);\r\n          })\r\n          .catch((err) => {\r\n            console.log(err);\r\n            this.$message.error({\r\n              message: err.data.message,\r\n              showClose: true,\r\n              duration: 2000,\r\n            });\r\n          });\r\n      },\r\n      // 删除图片\r\n      delImage(index) {\r\n        this.imgurls.splice(index, 1);\r\n      },\r\n      // 模糊搜索文档\r\n      wordCheck() {\r\n        this.$axios.post(this.$store.state.baseUrl + '/ruleList', {\r\n          time: this.time,\r\n          keyword: this.keyword,\r\n          page: this.page,\r\n          pageNum: this.pageNum\r\n        }).then(res => {\r\n          console.log('文档列表');\r\n          console.log(res);\r\n          this.wordList = res.data.list;\r\n          this.total = res.data.total;\r\n        }).catch(err => {\r\n          console.log(err);\r\n        })\r\n      },\r\n      // 分页\r\n      handleCurrentChange(val) {\r\n        console.log(`当前页: ${val}`);\r\n        this.page = val;\r\n        (function smoothscroll() {\r\n          let currentScroll =\r\n            document.documentElement.scrollTop || document.body.scrollTop;\r\n          if (currentScroll > 0) {\r\n            window.requestAnimationFrame(smoothscroll);\r\n            window.scrollTo(0, currentScroll - currentScroll / 5);\r\n          }\r\n        })();\r\n        this.wordCheck();\r\n      },\r\n    }\r\n  }\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n  .word-admin-container {\r\n    padding: 20px;\r\n    background-color: #fff;\r\n    border-radius: 6px;\r\n\r\n    .upload-imgs {\r\n      width: 100%;\r\n      margin-bottom: 10px;\r\n      position: relative;\r\n      display: flex;\r\n\r\n      .add {\r\n        width: 80px;\r\n        height: 40px;\r\n        position: relative;\r\n        border: 1px solid #ddd;\r\n        border-radius: 5px;\r\n        display: flex;\r\n\r\n        .addIcon {\r\n          position: absolute;\r\n          top: 13px;\r\n          left: 33px;\r\n          z-index: 1;\r\n        }\r\n\r\n        .inputUpload {\r\n          position: absolute;\r\n          display: block;\r\n          width: 80px;\r\n          height: 40px;\r\n          opacity: 0;\r\n          cursor: pointer;\r\n          z-index: 999;\r\n        }\r\n      }\r\n    }\r\n\r\n    #qrcode {\r\n      //图片有白边填充css\r\n      display: inline-block;\r\n\r\n      img {\r\n        width: 220px;\r\n        height: 220px;\r\n        background-color: #fff; //设置白色背景色\r\n        padding: 6px; // 利用padding的特性，挤出白边\r\n      }\r\n    }\r\n  }\r\n</style>"],"sourceRoot":"src/components"}]}