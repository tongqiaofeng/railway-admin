{"remainingRequest":"D:\\aa-tong\\my-projects\\railway-admin\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\aa-tong\\my-projects\\railway-admin\\src\\components\\Word-admin.vue?vue&type=template&id=ae7d8f8c&scoped=true&","dependencies":[{"path":"D:\\aa-tong\\my-projects\\railway-admin\\src\\components\\Word-admin.vue","mtime":1625645382525},{"path":"D:\\aa-tong\\my-projects\\railway-admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\aa-tong\\my-projects\\railway-admin\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"D:\\aa-tong\\my-projects\\railway-admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\aa-tong\\my-projects\\railway-admin\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}