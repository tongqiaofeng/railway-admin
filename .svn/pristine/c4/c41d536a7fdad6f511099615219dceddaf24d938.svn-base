{"remainingRequest":"D:\\aa-tong\\my-projects\\railway-admin\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\aa-tong\\my-projects\\railway-admin\\src\\components\\Warehouse-admin.vue?vue&type=style&index=1&lang=scss&","dependencies":[{"path":"D:\\aa-tong\\my-projects\\railway-admin\\src\\components\\Warehouse-admin.vue","mtime":1615363657719},{"path":"D:\\aa-tong\\my-projects\\railway-admin\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\aa-tong\\my-projects\\railway-admin\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"D:\\aa-tong\\my-projects\\railway-admin\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"D:\\aa-tong\\my-projects\\railway-admin\\node_modules\\sass-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\aa-tong\\my-projects\\railway-admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\aa-tong\\my-projects\\railway-admin\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgojd2FyZWhvdXNlLWFkbWluLXBhZ2UgewogIC5lbC10YWJsZSAuY2VsbCB7CiAgICBkaXNwbGF5OiBmbGV4OwogIH0KfQo="},{"version":3,"sources":["Warehouse-admin.vue"],"names":[],"mappingsoBA;AACA;AACA;AACA;AACA","file":"Warehouse-admin.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n  <div class=\"warehouse-admin-page-container\" id=\"warehouse-admin-page\">\r\n    <!-- <p>仓库管理</p> -->\r\n    <div class=\"department-select\">\r\n      <div class=\"department-top\" style=\"line-height: 48px;\">部门选择</div>\r\n      <!-- default-expand-all -->\r\n      <el-table :data=\"departmentData\" style=\"width: 100%;\" :row-key=\"getRowKeys\" :expand-row-keys=\"expands\" border\r\n        :tree-props=\"{children: 'children', hasChildren: 'hasChildren'}\" highlight-current-row\r\n        @current-change=\"handleCurrentChange\" ref=\"departmentTable\" @expand-change=\"rowClick\">\r\n        <el-table-column prop=\"label\" label=\"部门名称\" align=\"center\">\r\n          <template slot-scope=\"scope\">\r\n            <span style=\"margin-left: 5px\">{{ scope.row.label }}</span>\r\n          </template>\r\n        </el-table-column>\r\n        <el-table-column prop=\"label\" label=\"绑定仓库数量\" width=\"105px\" align=\"center\">\r\n          <template slot-scope=\"scope\">\r\n            <div style=\"width: 120px;text-align: center;\">{{scope.row.warehouseTotal}}</div>\r\n          </template>\r\n        </el-table-column>\r\n      </el-table>\r\n    </div>\r\n    <div class=\"binding-warehouse-select\">\r\n      <div class=\"department-top\" style=\"display: flex;justify-content: space-between;\">\r\n        <p style=\"width: 72px;margin: 0;line-height: 48px;\">绑定仓库</p>\r\n        <div style=\"display: flex;justify-content: flex-end;\">\r\n          <el-input style=\"width: 170px;\" v-model=\"warehouseName\" placeholder=\"请输入仓库名称\" clearable></el-input>\r\n          <el-select style=\"width: 120px;margin-left: 10px;\" v-model=\"type\" placeholder=\"请选择\">\r\n            <el-option v-for=\"item in typeList\" :key=\"item.id\" :label=\"item.name\" :value=\"item.id\">\r\n            </el-option>\r\n          </el-select>\r\n          <el-button type=\"primary\" size=\"small\" style=\"width: 80px;height: 40px;margin-left: 10px;\"\r\n            @click=\"bindingWarehouseAdd\">+ 添加\r\n          </el-button>\r\n        </div>\r\n      </div>\r\n      <div class=\"binding-warehouse-every\">\r\n        <el-table :data=\"bindingWarehouseList\" style=\"width: 100%\" border>\r\n          <el-table-column prop=\"name\" label=\"仓库名称\">\r\n            <template slot-scope=\"scope\">\r\n              <div>{{scope.row.name}}</div>\r\n            </template>\r\n          </el-table-column>\r\n          <el-table-column prop=\"type\" label=\"仓库类型\">\r\n            <template slot-scope=\"scope\">\r\n              <div>{{scope.row.type == 1 ? '料库' : (scope.row.type == 2 ? '机械室' : (scope.row.type == 3 ? '应急' : ''))}}\r\n              </div>\r\n            </template>\r\n          </el-table-column>\r\n          <el-table-column label=\"操作\" width=\"150px\">\r\n            <template slot-scope=\"scope\">\r\n              <div class=\"cell-work\">\r\n                <el-button type=\"text\" @click=\"bindingRemove(scope.row)\">解绑</el-button>\r\n                <el-dialog title=\"解绑仓库\" :visible.sync=\"dialogBindingRemoveVisible\" :close-on-press-escape=\"false\"\r\n                  :close-on-click-modal=\"false\" :modal-append-to-body=\"false\" :append-to-body=\"false\">\r\n                  <div style=\"text-align: center;\">\r\n                    <p style=\"margin-top: 10px;margin-bottom: 0;font-size: 16px;color: #4e4e4e;\">确定解除该仓库的绑定？</p>\r\n                  </div>\r\n                  <div slot=\"footer\">\r\n                    <el-button @click=\"dialogBindingRemoveVisible = false\">取 消</el-button>\r\n                    <el-button type=\"primary\" @click=\"bindingRemoveSure\">确 定</el-button>\r\n                  </div>\r\n                </el-dialog>\r\n                <el-button type=\"text\" @click=\"bindingUpdate(scope.row)\">\r\n                  编辑\r\n                </el-button>\r\n                <el-dialog title=\"修改仓库信息\" :visible.sync=\"dialogBindingUpdateVisible\" :close-on-press-escape=\"false\"\r\n                  :close-on-click-modal=\"false\" :modal-append-to-body=\"false\" :append-to-body=\"false\">\r\n                  <el-form label-width=\"82px\">\r\n                    <el-form-item label=\"仓库名称：\">\r\n                      <el-input v-model=\"bindingUpdateWarehouse.name\" style=\"width: 100%;\"></el-input>\r\n                    </el-form-item>\r\n                    <el-form-item label=\"仓库类型：\">\r\n                      <el-select style=\"width: 100%;\" v-model=\"bindingUpdateWarehouse.type\" placeholder=\"请选择\">\r\n                        <el-option v-for=\"item in typeList\" :key=\"item.id\" :label=\"item.name\" :value=\"item.id\">\r\n                        </el-option>\r\n                      </el-select>\r\n                    </el-form-item>\r\n                  </el-form>\r\n                  <div slot=\"footer\">\r\n                    <el-button @click=\"dialogBindingUpdateVisible = false\">取 消</el-button>\r\n                    <el-button type=\"primary\" @click=\"bindingUpdateSure\">确 定</el-button>\r\n                  </div>\r\n                </el-dialog>\r\n                <el-button type=\"text\" style=\"color: red;\" @click=\"bindingDelete(scope.row)\">删除\r\n                </el-button>\r\n                <el-dialog title=\"删除仓库\" :visible.sync=\"dialogBindingDeleteVisible\" :close-on-press-escape=\"false\"\r\n                  :close-on-click-modal=\"false\" :modal-append-to-body=\"false\" :append-to-body=\"false\">\r\n                  <div style=\"text-align: center;\">\r\n                    <p style=\"margin-top: 10px;margin-bottom: 0;font-size: 16px;color: #4e4e4e;\">确定删除该仓库？删除后不可修改</p>\r\n                  </div>\r\n                  <div slot=\"footer\">\r\n                    <el-button @click=\"dialogBindingDeleteVisible = false\">取 消</el-button>\r\n                    <el-button type=\"primary\" @click=\"bindingDeleteSure\">确 定</el-button>\r\n                  </div>\r\n                </el-dialog>\r\n              </div>\r\n            </template>\r\n          </el-table-column>\r\n        </el-table>\r\n      </div>\r\n    </div>\r\n    <div class=\"unbinding-warehouse-select\">\r\n      <div class=\"department-top\" style=\"display: flex;justify-content: space-between;\">\r\n        <p style=\"margin: 0;line-height: 48px;\">未绑定仓库</p>\r\n        <div style=\"display: flex;justify-content: flex-end;\">\r\n          <el-input style=\"width: 170px;\" v-model=\"unWarehouseName\" placeholder=\"请输入仓库名称\" clearable></el-input>\r\n          <el-select style=\"width: 120px;margin-left: 10px;\" v-model=\"unWarehouseType\" placeholder=\"请选择\">\r\n            <el-option v-for=\"item in typeList\" :key=\"item.id\" :label=\"item.name\" :value=\"item.id\">\r\n            </el-option>\r\n          </el-select>\r\n          <el-button type=\"primary\" size=\"small\" style=\"width: 80px;height: 40px;margin-left: 10px;\"\r\n            @click=\"unBindingWarehouseAdd\">+ 添加\r\n          </el-button>\r\n        </div>\r\n      </div>\r\n      <div class=\"binding-warehouse-every\">\r\n        <el-table :data=\"unBindingWarehouseList\" style=\"width: 100%\" border>\r\n          <el-table-column prop=\"name\" label=\"仓库名称\">\r\n            <template slot-scope=\"scope\">\r\n              <div>{{scope.row.name}}</div>\r\n            </template>\r\n          </el-table-column>\r\n          <el-table-column prop=\"type\" label=\"仓库类型\">\r\n            <template slot-scope=\"scope\">\r\n              <div>{{scope.row.type == 1 ? '料库' : (scope.row.type == 2 ? '机械室' : (scope.row.type == 3 ? '应急' : ''))}}\r\n              </div>\r\n            </template>\r\n          </el-table-column>\r\n          <el-table-column label=\"操作\" width=\"150px\">\r\n            <template slot-scope=\"scope\">\r\n              <div class=\"cell-work\">\r\n                <el-button type=\"text\" @click=\"unBindingRemove(scope.row)\">绑定</el-button>\r\n                <el-dialog title=\"绑定仓库\" :visible.sync=\"dialogUnBindingRemoveVisible\" :close-on-press-escape=\"false\"\r\n                  :close-on-click-modal=\"false\" :modal-append-to-body=\"false\" :append-to-body=\"false\">\r\n                  <div style=\"text-align: center;\">\r\n                    <p style=\"margin-top: 10px;margin-bottom: 0;font-size: 16px;color: #4e4e4e;\">确定绑定该仓库？</p>\r\n                  </div>\r\n                  <div slot=\"footer\">\r\n                    <el-button @click=\"dialogUnBindingRemoveVisible = false\">取 消</el-button>\r\n                    <el-button type=\"primary\" @click=\"unBindingRemoveSure\">确 定</el-button>\r\n                  </div>\r\n                </el-dialog>\r\n                <el-button type=\"text\" @click=\"unBindingUpdate(scope.row)\">\r\n                  编辑\r\n                </el-button>\r\n                <el-dialog title=\"修改仓库信息\" :visible.sync=\"dialogUnBindingUpdateVisible\" :close-on-press-escape=\"false\"\r\n                  :close-on-click-modal=\"false\" :modal-append-to-body=\"false\" :append-to-body=\"false\">\r\n                  <el-form label-width=\"82px\">\r\n                    <el-form-item label=\"仓库名称：\">\r\n                      <el-input v-model=\"unBindingUpdateWarehouse.name\" style=\"width: 100%;\"></el-input>\r\n                    </el-form-item>\r\n                    <el-form-item label=\"仓库类型：\">\r\n                      <el-select style=\"width: 100%;\" v-model=\"unBindingUpdateWarehouse.type\" placeholder=\"请选择\">\r\n                        <el-option v-for=\"item in typeList\" :key=\"item.id\" :label=\"item.name\" :value=\"item.id\">\r\n                        </el-option>\r\n                      </el-select>\r\n                    </el-form-item>\r\n                  </el-form>\r\n                  <div slot=\"footer\">\r\n                    <el-button @click=\"dialogUnBindingUpdateVisible = false\">取 消</el-button>\r\n                    <el-button type=\"primary\" @click=\"unBindingUpdateSure\">确 定</el-button>\r\n                  </div>\r\n                </el-dialog>\r\n                <el-button type=\"text\" style=\"color: red;\" @click=\"unBindingDelete(scope.row)\">\r\n                  删除\r\n                </el-button>\r\n                <el-dialog title=\"删除仓库\" :visible.sync=\"dialogUnBindingDeleteVisible\" :close-on-press-escape=\"false\"\r\n                  :close-on-click-modal=\"false\" :modal-append-to-body=\"false\" :append-to-body=\"false\">\r\n                  <div style=\"text-align: center;\">\r\n                    <p style=\"margin-top: 10px;margin-bottom: 0;font-size: 16px;color: #4e4e4e;\">确定删除该仓库？删除后不可修改</p>\r\n                  </div>\r\n                  <div slot=\"footer\">\r\n                    <el-button @click=\"dialogUnBindingDeleteVisible = false\">取 消</el-button>\r\n                    <el-button type=\"primary\" @click=\"unBindingDeleteSure\">确 定</el-button>\r\n                  </div>\r\n                </el-dialog>\r\n              </div>\r\n            </template>\r\n          </el-table-column>\r\n        </el-table>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n  export default {\r\n    data() {\r\n      return {\r\n        departmentData: [],\r\n        warehouseList: [],\r\n        departmentSelected: {},\r\n        binding: true,\r\n        warehouseName: '',\r\n        bindingWarehouseList: [],\r\n        unBindingWarehouseList: [],\r\n        unWarehouseName: '',\r\n        dialogBindingRemoveVisible: false,\r\n        bindingRemoveWarehouse: {},\r\n        dialogBindingUpdateVisible: false,\r\n        bindingUpdateWarehouse: {},\r\n        dialogBindingDeleteVisible: false,\r\n        bindingDeleteWarehouse: {},\r\n        dialogUnBindingRemoveVisible: false,\r\n        unBindingRemoveWarehouse: {},\r\n        dialogUnBindingUpdateVisible: false,\r\n        unBindingUpdateWarehouse: {},\r\n        dialogUnBindingDeleteVisible: false,\r\n        unBindingDeleteWarehouse: {},\r\n\r\n        expands: [],\r\n        getRowKeys(row) {\r\n          // console.log(row);\r\n          return row.id;\r\n        },\r\n\r\n        type: '',\r\n        unWarehouseType: '',\r\n        typeList: [{\r\n          id: 1,\r\n          name: '料库'\r\n        }, {\r\n          id: 2,\r\n          name: '机械室'\r\n        }, {\r\n          id: 3,\r\n          name: '应急'\r\n        }, ],\r\n      }\r\n    },\r\n    created() {\r\n      this.$axios.post(this.$store.state.baseUrl + '/menuWarehouseList').then((res) => {\r\n        console.log('仓库列表');\r\n        console.log(res);\r\n        this.warehouseList = res.data.warehouseList;\r\n        this.$axios.post(this.$store.state.baseUrl + '/userDeptList').then((res) => {\r\n          console.log('用户部门列表');\r\n          console.log(res);\r\n          this.departmentData = res.data;\r\n          this.handleCurrentChange(this.departmentData[0]);\r\n          this.$nextTick(() => {\r\n            console.log(this.$refs.departmentTable);\r\n            this.$refs.departmentTable.setCurrentRow(this.departmentData[0]);\r\n            // this.expands = [];\r\n            // console.log('0000000003333333=========');\r\n            // console.log(this.departmentData[0].children[0].id);\r\n            // this.expands.push(this.departmentData[0].children[0].id);\r\n            // console.log(this.expands);\r\n            // this.expands = ['9'];\r\n          })\r\n        }).catch((err) => {\r\n          console.log(err);\r\n        });\r\n      }).catch((err) => {\r\n        console.log(err);\r\n      });\r\n    },\r\n    methods: {\r\n      // 未绑定仓库新增\r\n      unBindingWarehouseAdd() {\r\n        if (this.unWarehouseName == '' || this.unWarehouseType == '') {\r\n          this.$message.warning({\r\n            message: '数据不能为空',\r\n            showClose: true,\r\n            duration: 2000\r\n          })\r\n        } else {\r\n          this.$axios.post(this.$store.state.baseUrl + '/warehouseSave', {\r\n            name: this.unWarehouseName,\r\n            type: this.unWarehouseType\r\n          }).then((res) => {\r\n            console.log('新增未绑定仓库成功');\r\n            console.log(res);\r\n            this.$message.success({\r\n              message: '未绑定仓库新增成功',\r\n              showClose: true,\r\n              duration: 2000\r\n            });\r\n            this.unWarehouseName = '';\r\n            this.unWarehouseType = '';\r\n            this.getMenuWarehouseList();\r\n          }).catch((err) => {\r\n            console.log('新增未绑定仓库失败');\r\n            console.log(err);\r\n            this.$message.error({\r\n              message: err.data.message,\r\n              showClose: true,\r\n              duration: 2000\r\n            });\r\n          });\r\n        }\r\n      },\r\n      // 绑定仓库\r\n      unBindingRemove(val) {\r\n        this.unBindingRemoveWarehouse = val;\r\n        this.dialogUnBindingRemoveVisible = true;\r\n        console.log(val);\r\n        console.log(this.departmentSelected);\r\n      },\r\n      // 确定绑定\r\n      unBindingRemoveSure() {\r\n        this.$axios.post(this.$store.state.baseUrl + '/warehouseSave', {\r\n          id: this.unBindingRemoveWarehouse.id,\r\n          wid: this.departmentSelected.id\r\n        }).then((res) => {\r\n          console.log('绑定仓库');\r\n          console.log(res);\r\n          this.$message.success({\r\n            message: '绑定成功',\r\n            showClose: true,\r\n            duration: 2000\r\n          });\r\n          this.dialogUnBindingRemoveVisible = false;\r\n          this.getMenuWarehouseList();\r\n        }).catch((err) => {\r\n          console.log(err);\r\n          this.dialogUnBindingRemoveVisible = false;\r\n          this.$message.error({\r\n            message: err.data.message,\r\n            showClose: true,\r\n            duration: 2000\r\n          });\r\n        });\r\n      },\r\n      // 未绑定仓库修改\r\n      unBindingUpdate(val) {\r\n        this.unBindingUpdateWarehouse = val;\r\n        console.log(val);\r\n        this.dialogUnBindingUpdateVisible = true;\r\n      },\r\n      // 确定修改\r\n      unBindingUpdateSure() {\r\n        this.$axios.post(this.$store.state.baseUrl + '/warehouseSave', {\r\n          id: this.unBindingUpdateWarehouse.id,\r\n          name: this.unBindingUpdateWarehouse.name,\r\n          type: this.unBindingUpdateWarehouse.type\r\n        }).then((res) => {\r\n          console.log('修改仓库');\r\n          console.log(res);\r\n          this.$message.success({\r\n            message: '仓库信息修改成功',\r\n            showClose: true,\r\n            duration: 2000\r\n          });\r\n          this.dialogUnBindingUpdateVisible = false;\r\n          this.getMenuWarehouseList();\r\n        }).catch((err) => {\r\n          console.log(err);\r\n          this.dialogUnBindingUpdateVisible = false;\r\n          this.$message.error({\r\n            message: err.data.message,\r\n            showClose: true,\r\n            duration: 2000\r\n          });\r\n        });\r\n      },\r\n      // 未绑定仓库删除\r\n      unBindingDelete(val) {\r\n        console.log(val);\r\n        this.unBindingDeleteWarehouse = val;\r\n        this.dialogUnBindingDeleteVisible = true;\r\n      },\r\n      // 确定删除\r\n      unBindingDeleteSure() {\r\n        this.$axios.post(this.$store.state.baseUrl + '/warehouseDelete', {\r\n          id: this.unBindingDeleteWarehouse.id\r\n        }).then((res) => {\r\n          console.log('删除仓库');\r\n          console.log(res);\r\n          this.$message.success({\r\n            message: '仓库删除成功',\r\n            showClose: true,\r\n            duration: 2000\r\n          });\r\n          this.dialogUnBindingDeleteVisible = false;\r\n          this.getMenuWarehouseList();\r\n        }).catch((err) => {\r\n          console.log(err);\r\n          this.dialogUnBindingDeleteVisible = false;\r\n          this.$message.error({\r\n            message: err.data.message,\r\n            showClose: true,\r\n            duration: 2000\r\n          });\r\n        });\r\n      },\r\n      // 绑定仓库新增\r\n      bindingWarehouseAdd() {\r\n        if (this.warehouseName == '' || this.type == '') {\r\n          this.$message.warning({\r\n            message: '数据不能为空',\r\n            showClose: true,\r\n            duration: 2000\r\n          })\r\n        } else {\r\n          this.$axios.post(this.$store.state.baseUrl + '/warehouseSave', {\r\n            wid: this.departmentSelected.id,\r\n            name: this.warehouseName,\r\n            type: this.type\r\n          }).then((res) => {\r\n            console.log('新增绑定仓库成功');\r\n            console.log(res);\r\n            this.$message.success({\r\n              message: '绑定仓库新增成功',\r\n              showClose: true,\r\n              duration: 2000\r\n            });\r\n            this.warehouseName = '';\r\n            this.type = '';\r\n            this.getMenuWarehouseList();\r\n          }).catch((err) => {\r\n            console.log('新增绑定仓库失败');\r\n            console.log(err);\r\n            this.$message.error({\r\n              message: err.data.message,\r\n              showClose: true,\r\n              duration: 2000\r\n            });\r\n          });\r\n        }\r\n      },\r\n      // 绑定仓库解绑\r\n      bindingRemove(val) {\r\n        this.bindingRemoveWarehouse = val;\r\n        this.dialogBindingRemoveVisible = true;\r\n        console.log(val);\r\n      },\r\n      // 确定解绑\r\n      bindingRemoveSure() {\r\n        this.$axios.post(this.$store.state.baseUrl + '/warehouseSave', {\r\n          id: this.bindingRemoveWarehouse.id\r\n        }).then((res) => {\r\n          console.log('解绑仓库');\r\n          console.log(res);\r\n          this.$message.success({\r\n            message: '解除绑定成功',\r\n            showClose: true,\r\n            duration: 2000\r\n          });\r\n          this.dialogBindingRemoveVisible = false;\r\n          this.getMenuWarehouseList();\r\n        }).catch((err) => {\r\n          console.log(err);\r\n          this.dialogBindingRemoveVisible = false;\r\n          this.$message.error({\r\n            message: err.data.message,\r\n            showClose: true,\r\n            duration: 2000\r\n          });\r\n        });\r\n      },\r\n      // 绑定仓库修改\r\n      bindingUpdate(val) {\r\n        this.bindingUpdateWarehouse = val;\r\n        console.log(val);\r\n        this.dialogBindingUpdateVisible = true;\r\n      },\r\n      // 确定修改\r\n      bindingUpdateSure() {\r\n        this.$axios.post(this.$store.state.baseUrl + '/warehouseSave', {\r\n          id: this.bindingUpdateWarehouse.id,\r\n          name: this.bindingUpdateWarehouse.name,\r\n          wid: this.bindingUpdateWarehouse.wid,\r\n          type: this.bindingUpdateWarehouse.type\r\n        }).then((res) => {\r\n          console.log('修改仓库');\r\n          console.log(res);\r\n          this.$message.success({\r\n            message: '仓库信息修改成功',\r\n            showClose: true,\r\n            duration: 2000\r\n          });\r\n          this.dialogBindingUpdateVisible = false;\r\n          this.getMenuWarehouseList();\r\n        }).catch((err) => {\r\n          console.log(err);\r\n          this.dialogBindingUpdateVisible = false;\r\n          this.$message.error({\r\n            message: err.data.message,\r\n            showClose: true,\r\n            duration: 2000\r\n          });\r\n        });\r\n      },\r\n      // 绑定仓库删除\r\n      bindingDelete(val) {\r\n        console.log(val);\r\n        this.bindingDeleteWarehouse = val;\r\n        this.dialogBindingDeleteVisible = true;\r\n      },\r\n      // 确定删除\r\n      bindingDeleteSure() {\r\n        this.$axios.post(this.$store.state.baseUrl + '/warehouseDelete', {\r\n          id: this.bindingDeleteWarehouse.id\r\n        }).then((res) => {\r\n          console.log('删除仓库');\r\n          console.log(res);\r\n          this.$message.success({\r\n            message: '仓库删除成功',\r\n            showClose: true,\r\n            duration: 2000\r\n          });\r\n          this.dialogBindingDeleteVisible = false;\r\n          this.getMenuWarehouseList();\r\n        }).catch((err) => {\r\n          console.log(err);\r\n          this.dialogBindingDeleteVisible = false;\r\n          this.$message.error({\r\n            message: err.data.message,\r\n            showClose: true,\r\n            duration: 2000\r\n          });\r\n        });\r\n      },\r\n      // 选中行 部门选择\r\n      handleCurrentChange(val) {\r\n        console.log('部门选择');\r\n        this.warehouseName = '';\r\n        this.departmentSelected = val;\r\n        console.log(this.departmentSelected);\r\n\r\n        this.warehouseCheck();\r\n      },\r\n      rowClick(row) {\r\n        // this.expands = [];\r\n        // ['1','2','4']\r\n        console.log(this.expands.indexOf(row.id));\r\n        if (this.expands.indexOf(row.id.toString()) == -1) {\r\n          this.expands.push(row.id.toString());\r\n        } else {\r\n          for (const i in this.expands) {\r\n            if (this.expands[i] == row.id) {\r\n              this.expands.splice(i, 1);\r\n            }\r\n          }\r\n        }\r\n        console.log(this.expands);\r\n      },\r\n      // 获取部门列表\r\n      getMenuWarehouseList() {\r\n        this.departmentData = [];\r\n        this.warehouseList = [];\r\n        this.$axios.post(this.$store.state.baseUrl + '/menuWarehouseList').then((res) => {\r\n          console.log('仓库列表');\r\n          console.log(res);\r\n          this.warehouseList = res.data.warehouseList;\r\n\r\n          this.$axios.post(this.$store.state.baseUrl + '/userDeptList').then((res) => {\r\n            console.log('用户部门列表');\r\n            console.log(res);\r\n            this.departmentData = res.data;\r\n\r\n            this.handleCurrentChange(this.departmentSelected);\r\n\r\n            this.$nextTick(() => {\r\n              console.log(this.$refs.departmentTable);\r\n              console.log('---------');\r\n              console.log(this.departmentData[0].children[0]);\r\n              console.log(this.departmentSelected);\r\n              console.log('---------=======');\r\n\r\n              this.func(this.departmentData);\r\n\r\n            })\r\n          }).catch((err) => {\r\n            console.log(err);\r\n          });\r\n        }).catch((err) => {\r\n          console.log(err);\r\n        });\r\n      },\r\n      func(list) {\r\n        for (const item of list) {\r\n          // console.log(item);\r\n          if (item.id == this.departmentSelected.id) {\r\n            this.$refs.departmentTable.setCurrentRow(item);\r\n            // this.expands.push(item.id);\r\n          } else {\r\n            if (item.children.length !== 0) {\r\n              this.func(item.children);\r\n            }\r\n          }\r\n        }\r\n      },\r\n      // 绑定与未绑定仓库\r\n      warehouseCheck() {\r\n        console.log('绑定与未绑定');\r\n        console.log(this.departmentSelected);\r\n        this.bindingWarehouseList = [];\r\n        this.unBindingWarehouseList = [];\r\n        console.log(this.bindingWarehouseList);\r\n        console.log(this.unBindingWarehouseList);\r\n        console.log(this.warehouseList);\r\n        for (let i = 0; i < this.warehouseList.length; i++) {\r\n          if (this.warehouseList[i].wid == this.departmentSelected.id) {\r\n            console.log(this.warehouseList[i].wid);\r\n            this.bindingWarehouseList.push(this.warehouseList[i]);\r\n          } else {\r\n            if (this.warehouseList[i].wid == null || this.warehouseList[i].wid == 0) {\r\n              this.unBindingWarehouseList.push(this.warehouseList[i]);\r\n            }\r\n          }\r\n        };\r\n        console.log(this.bindingWarehouseList);\r\n        console.log(this.unBindingWarehouseList);\r\n      },\r\n    }\r\n  }\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n  .warehouse-admin-page-container {\r\n    padding: 20px 10px 20px;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    background-color: #fff;\r\n    border-radius: 6px;\r\n\r\n    .department-select {\r\n      width: 18%;\r\n    }\r\n\r\n    .binding-warehouse-select,\r\n    .unbinding-warehouse-select {\r\n      width: 40%;\r\n    }\r\n\r\n    .department-top {\r\n      height: 48px;\r\n      // line-height: 48px;\r\n      text-align: left;\r\n      color: #6a6a6a;\r\n      font-size: 18px;\r\n      font-weight: bold;\r\n    }\r\n\r\n    .binding-warehouse-select {\r\n      .binding-warehouse-every {\r\n        width: 100%;\r\n      }\r\n    }\r\n\r\n    .cell-work {\r\n      width: 100%;\r\n      display: flex;\r\n      justify-content: space-around !important;\r\n    }\r\n  }\r\n</style>\r\n<style lang=\"scss\">\r\n  #warehouse-admin-page {\r\n    .el-table .cell {\r\n      display: flex;\r\n    }\r\n  }\r\n</style>"]}]}